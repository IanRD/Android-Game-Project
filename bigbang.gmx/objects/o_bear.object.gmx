<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_minzy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var btarg = instance_find(o_burger,0);

carrytarg = noone;
despawn = 15;

image_speed = 0;

level = 1;
hpmax = 500;
hp = hpmax;
blinking = 0;

escape_cooldown = 0;

xtarg = btarg.x;
ytarg = btarg.y;
next_xtarg = x;
next_ytarg = y;
yscale = 1;
depth = -y;

bodyimg = 0;

escaping = false;
flash = 0;

flashpass = shader_get_uniform(shad_flash,'flash_amt')

last_coords = ds_list_create();
movedir = 0;
movespeed = 80/room_speed;

xgrid = real_to_grid(x);
ygrid = real_to_grid(y);

z = 0;
head_z = z;
zspeed = 0;

spd = 1;
bouncespeed = 6*GRAVITY;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(last_coords);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>update_pathfind();
movedir = point_direction(x,y,next_xtarg,next_ytarg);
move(min(movespeed*spd,point_distance(next_xtarg,next_ytarg,x,y)),movedir,false);

new_xgrid = real_to_grid(x);
new_ygrid = real_to_grid(y);

if new_xgrid != xgrid || new_ygrid != ygrid {
    ds_list_add(last_coords,xy_to_coords(new_xgrid,new_ygrid));
    if ds_list_size(last_coords) &gt; 3 {
        ds_list_delete(last_coords,0)
    }
    var mytarg = o_burger;
    
    if escaping {
        mytarg = closest_instance(x,y,o_spawner,10000);        
    }
    
    if instance_exists(mytarg) {
        xtarg = mytarg.x;
        ytarg = mytarg.y;
    }
}

xgrid = real_to_grid(x);
ygrid = real_to_grid(y);

z = max(0,z+zspeed*spd*SPD);
zspeed -= GRAVITY*SPD*spd
if z &lt;= 0 {
    bodyimg = !bodyimg;
    yscale = .85;
    zspeed = bouncespeed;
}

depth = -y;

spd += tween(spd,1,.03)

var bg = closest_instance(x,y,o_burger,50);
if bg != noone
    claim_burger();
    
escape_cooldown = max(0,escape_cooldown-1/room_speed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_destroy,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_shadow(x,.6)
update_facingright(movedir);

if flash &gt; 0 {    
    shader_set(shad_flash)
    shader_set_uniform_f(flashpass,flash);
}

blinking = blink(blinking);

head_z += tween(head_z,z,.75);
head_z = clamp(head_z,z-5,z+5);

draw_sprite_ext(sprite_index,bodyimg,x,y-z,xscale,yscale,0,c_white,1);
draw_sprite_ext(sprite_index,2+isblinking(blinking),x,y-head_z,xscale,yscale,0,c_white,1)
shader_reset();

yscale += tween(yscale,1,.1)
flash -= 8/room_speed;

if hp &lt; hpmax {
    draw_hp_bar();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,30</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
