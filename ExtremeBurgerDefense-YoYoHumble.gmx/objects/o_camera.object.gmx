<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake = 0;
target = noone;

xtarg = x;
ytarg = y;

xanchor = x;
yanchor = y;
xdrag = 0;
ydrag = 0;
dragdevice = 0;

xbase = 0;
ybase = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_listener_position(x,y,0);

if !instance_exists(o_endscreen) {
if instance_exists(target) {
    xtarg = target.x;
    ytarg = target.y;
}
else {
    if PLACING != -1
        dragdevice = -1;
    else {
        if dragdevice == -1 {
            var d;
            for (d = 0; d &lt; 5 &amp;&amp; dragdevice = -1; d++){
                if device_mouse_check_button_pressed(d,mb_left) {
                    var dx = device_mouse_x(d);
                    var dy = device_mouse_y(d);
                    if !on_button(dx,dy) &amp;&amp; !CHOPPING &amp;&amp; PLACING == -1 {
                        var soundplayed = false;
                        var pickups = 0;
                        with o_coin {
                            if point_distance(dx,dy,x,y) &lt; 100 &amp;&amp; z &lt; 20{
                                
                                if !soundplayed
                                    audio_play_sound(snd_menuclick,10,false);
                                soundplayed = true;
                                if !gold {
                                    SILVER++;
                                    pickups++;                                    
                                }
                                else {
                                    GOLD++;
                                    show_popuptext(x,y,'+1 GOLD',c_yellow)
                                    save_progress();
                                }
                                instance_create(x,y,eff_sparkle)
                                instance_destroy()
                            }
                        }
                        if pickups &gt; 0 {
                            show_popuptext(dx,dy,'+' + string(pickups) + ' SILVER',c_white)
                        }
                    
                    
                        dragdevice = d;
                        xbase = x;
                        ybase = y;
                        xanchor = dx;
                        yanchor = dy;
                    }
                }
            }
        }
        
        if dragdevice != -1 {
            if !device_mouse_check_button(dragdevice,mb_left) {
                dragdevice = -1;
            }
            else {
                var dx = device_mouse_x(dragdevice);
                var dy = device_mouse_y(dragdevice);
                xtarg = clamp(xbase+4*(xanchor-dx),view_wview*.5,room_width-view_wview*.5);
                ytarg = clamp(ybase+4*(yanchor-dy),view_hview*.5,room_height-view_hview*.5);
            }
        }
    }
}

x += tween(x,xtarg,.4);
y += tween(y,ytarg,.4);

view_xview = round(x-view_wview*.5+random_range(-shake,shake));
view_yview = round(y-view_hview*.5+random_range(-shake,shake));

shake = max(0,shake-1*(30/room_speed))

x = round(clamp(x,view_wview*.5,room_width-view_wview*.5));
y = round(clamp(y,view_hview*.5,room_height-view_hview*.5));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
